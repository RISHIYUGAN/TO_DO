[{"C:\\Users\\HP\\Documents\\GitHub\\TO_DO\\client-side\\src\\index.js":"1","C:\\Users\\HP\\Documents\\GitHub\\TO_DO\\client-side\\src\\App\\App.js":"2","C:\\Users\\HP\\Documents\\GitHub\\TO_DO\\client-side\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Documents\\GitHub\\TO_DO\\client-side\\src\\header\\header.js":"4","C:\\Users\\HP\\Documents\\GitHub\\TO_DO\\client-side\\src\\pages\\dashboard\\dashboard.js":"5"},{"size":521,"mtime":1611063115516,"results":"6","hashOfConfig":"7"},{"size":514,"mtime":1611065711866,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1610956806005,"results":"9","hashOfConfig":"7"},{"size":467,"mtime":1611063115514,"results":"10","hashOfConfig":"7"},{"size":5136,"mtime":1611126234459,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"dnfrj2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\Users\\HP\\Documents\\GitHub\\TO_DO\\client-side\\src\\index.js",[],["25","26"],"C:\\Users\\HP\\Documents\\GitHub\\TO_DO\\client-side\\src\\App\\App.js",[],"C:\\Users\\HP\\Documents\\GitHub\\TO_DO\\client-side\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Documents\\GitHub\\TO_DO\\client-side\\src\\header\\header.js",["27","28"],"import React from \"react\"\r\nimport \"./header.css\"\r\nimport logo from \"../images/todo_logo.png\"\r\nimport pencil from \"../images/pencil.png\"\r\n\r\nexport const Header=()=>{\r\n    return(\r\n        <div className=\"header-container\">\r\n          <img src={logo} className=\"todo-logo\"/>\r\n          <span><h1 className=\"header-title\"><span className=\"To\">To</span><span className=\"Do\">Do</span></h1></span>\r\n          <img src={pencil} className=\"pencil\"/>\r\n        </div>\r\n    )\r\n}","C:\\Users\\HP\\Documents\\GitHub\\TO_DO\\client-side\\src\\pages\\dashboard\\dashboard.js",["29","30","31","32","33"],"import React, { Fragment, useState } from \"react\";\r\nimport \"./dashboard.css\";\r\nimport axios from \"axios\";\r\n\r\nexport const Dashboard = () => {\r\n  const [worklist, setWorklist] = useState([\r\n    { content: \"do my application\", completed: false },\r\n    { content: \"test my application\", completed: false },\r\n    { content: \"finish my application\", completed: false },\r\n  ]);\r\n  let i = 0;\r\n  const submitting = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.test.value);\r\n    const value = e.target.test.value;\r\n    axios\r\n      .post(\"http://localhost:3000/todo-list\", {\r\n        id: \"60070dc0afd83a2b600b9a69\",\r\n        todolist: worklist,\r\n      })\r\n      .then((res) => {\r\n        console.log(\"response:\", res.data);\r\n        e.target.test.value = \"\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"Parent-Div\">\r\n      <div className=\"Dashboard-container\">\r\n        <div className=\"titleDiv\">\r\n          <h2 className=\"D-title\">\r\n            Today's Works\r\n            <div style={{ display: \"flex\", padding: \"0px 8px 0px 8px\" }}>\r\n              <div\r\n                style={{\r\n                  borderRadius: \"10px\",\r\n                  marginRight: \"3px\",\r\n                  width: \"100%\",\r\n                  height: \"5px\",\r\n                  backgroundColor: \"red\",\r\n                }}\r\n              ></div>\r\n              <div\r\n                style={{\r\n                  borderRadius: \"10px\",\r\n                  marginRight: \"2px\",\r\n                  width: \"50%\",\r\n                  height: \"5px\",\r\n                  backgroundColor: \"red\",\r\n                }}\r\n              ></div>\r\n              <div\r\n                style={{\r\n                  borderRadius: \"10px\",\r\n                  marginRight: \"1px\",\r\n                  width: \"15%\",\r\n                  height: \"5px\",\r\n                  backgroundColor: \"red\",\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </h2>\r\n        </div>\r\n        <div className=\"AddButtonDiv\">\r\n          <div className=\"completed\">\r\n            {worklist.map((work) => {\r\n              {\r\n                work.completed === true && i++;\r\n              }\r\n            })}\r\n            completed: <text style={{ color: \"red\" }}>{i}</text> /{\" \"}\r\n            <text style={{ color: \"rgb(9, 207, 9)\" }}>{worklist.length}</text>\r\n          </div>\r\n          <button\r\n            className=\"AddWorkButton\"\r\n            onClick={() => {\r\n              var container = document.querySelector(\".inputContainer\");\r\n              container.style.top = \"0px\";\r\n            }}\r\n          >\r\n            +Add Works\r\n          </button>\r\n        </div>\r\n        <div className=\"todo-List\">\r\n          {worklist.map((work) => (\r\n            <div className=\"eachWork\">\r\n              <div className=\"work-content\">\r\n                {work.content}\r\n                <button className=\"Mark-button\">Mark as done</button>\r\n              </div>\r\n              {worklist.indexOf(work) !== worklist.length - 1 ? (\r\n                <div className=\"break-line\"></div>\r\n              ) : (\r\n                <div className=\"content-end-wrapper\">\r\n                  <div className=\"content-end\"></div>\r\n                  <div className=\"content-end\"></div>\r\n                  <div className=\"content-end\"></div>\r\n                  <div className=\"content-end\"></div>\r\n                  <div className=\"content-end\"></div>\r\n                  <div className=\"content-end\"></div>\r\n                  <div className=\"content-end\"></div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <form\r\n          onSubmit={(e) => {\r\n            submitting(e);\r\n          }}\r\n        >\r\n          <div className=\"inputContainer\">\r\n            <div className=\"exitDiv\">\r\n              <div\r\n                className=\"exit\"\r\n                onClick={() => {\r\n                  var container = document.querySelector(\".inputContainer\");\r\n                  container.style.top = \"-200px\";\r\n                }}\r\n              >\r\n                <div className=\"ediv_1\"></div>\r\n                <div className=\"ediv_2\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"input-wrapper\">\r\n              <div\r\n                className=\"inputDiv\"\r\n                onFocus={() => {\r\n                  var inputDiv = document.querySelector(\".inputDiv\");\r\n                  inputDiv.style.boxShadow = \"0 0 15px rgba(0, 0, 0, 0.513)\";\r\n                }}\r\n                onBlur={() => {\r\n                  var inputDiv = document.querySelector(\".inputDiv\");\r\n                  inputDiv.style.boxShadow = \"none\";\r\n                }}\r\n              >\r\n                <i class=\"fa fa-tasks fa-lg\"></i>\r\n                <input\r\n                  name=\"test\"\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter work\"\r\n                />\r\n              </div>\r\n              <button className=\"Add-Button\">Add +</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":9,"column":11,"nodeType":"40","endLine":9,"endColumn":50},{"ruleId":"38","severity":1,"message":"39","line":11,"column":11,"nodeType":"40","endLine":11,"endColumn":49},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"45","line":6,"column":20,"nodeType":"43","messageId":"44","endLine":6,"endColumn":31},{"ruleId":"41","severity":1,"message":"46","line":15,"column":11,"nodeType":"43","messageId":"44","endLine":15,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":68,"column":34,"nodeType":"49","messageId":"50","endLine":68,"endColumn":36},{"ruleId":"51","severity":1,"message":"52","line":69,"column":15,"nodeType":"53","messageId":"54","endLine":71,"endColumn":16},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'setWorklist' is assigned a value but never used.","'value' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]