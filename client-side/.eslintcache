[{"D:\\repository\\TO_DO\\client-side\\src\\index.js":"1","D:\\repository\\TO_DO\\client-side\\src\\reportWebVitals.js":"2","D:\\repository\\TO_DO\\client-side\\src\\App\\App.js":"3","D:\\repository\\TO_DO\\client-side\\src\\Redux\\store.js":"4","D:\\repository\\TO_DO\\client-side\\src\\router\\Router.js":"5","D:\\repository\\TO_DO\\client-side\\src\\Redux\\Reducers.js":"6","D:\\repository\\TO_DO\\client-side\\src\\router\\PublicRoute.js":"7","D:\\repository\\TO_DO\\client-side\\src\\router\\PrivateRoute.js":"8","D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\profile\\profile.js":"9","D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\login\\login.js":"10","D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\dashboard\\dashboard.js":"11","D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\view_activity\\view_activity.js":"12","D:\\repository\\TO_DO\\client-side\\src\\Components\\Header\\Header.js":"13","D:\\repository\\TO_DO\\client-side\\src\\Redux\\actions.js":"14","D:\\repository\\TO_DO\\client-side\\src\\Components\\utility\\underline.js":"15"},{"size":504,"mtime":1612183113512,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":565,"mtime":1613048584614,"results":"19","hashOfConfig":"17"},{"size":561,"mtime":1617296888873,"results":"20","hashOfConfig":"17"},{"size":988,"mtime":1617297408380,"results":"21","hashOfConfig":"17"},{"size":721,"mtime":1617296855754,"results":"22","hashOfConfig":"17"},{"size":724,"mtime":1617297378186,"results":"23","hashOfConfig":"17"},{"size":788,"mtime":1612784256190,"results":"24","hashOfConfig":"17"},{"size":129,"mtime":1612167158906,"results":"25","hashOfConfig":"17"},{"size":7531,"mtime":1617024408603,"results":"26","hashOfConfig":"17"},{"size":15595,"mtime":1617450974078,"results":"27","hashOfConfig":"17"},{"size":2802,"mtime":1617360682429,"results":"28","hashOfConfig":"17"},{"size":6521,"mtime":1617297549982,"results":"29","hashOfConfig":"17"},{"size":267,"mtime":1617296814253,"results":"30","hashOfConfig":"17"},{"size":1066,"mtime":1617297816947,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"49o916",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\repository\\TO_DO\\client-side\\src\\index.js",[],["69","70"],"D:\\repository\\TO_DO\\client-side\\src\\reportWebVitals.js",[],"D:\\repository\\TO_DO\\client-side\\src\\App\\App.js",["71","72"],"import './App.css';\r\nimport React from \"react\"\r\nimport axios from \"axios\"\r\n// import {Header} from \"../header/header\"\r\n// import {Dashboard} from \"../pages/dashboard/dashboard\"\r\nimport {useEffect} from \"react\"\r\nimport {AppRouter} from \"../router/Router\"\r\nimport configurestore from \"../Redux/store\"\r\nimport { Provider } from 'react-redux';\r\n\r\nexport const store=configurestore();\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App-container\">\r\n      <Provider store={store}>\r\n      <AppRouter/>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\repository\\TO_DO\\client-side\\src\\Redux\\store.js",["73"],"import {createStore,combineReducers,applyMiddleware,compose} from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport {AuthReducer,DashbdPersonalReducer,HistryPersonalReducer} from \"./Reducers\"\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default()=>{\r\n    const store=createStore(\r\n        combineReducers({\r\n            Auth:AuthReducer,\r\n            Dasbd:DashbdPersonalReducer,\r\n            History:HistryPersonalReducer\r\n        }),\r\n        composeEnhancers(applyMiddleware(thunk))\r\n    );\r\n  return store \r\n}","D:\\repository\\TO_DO\\client-side\\src\\router\\Router.js",["74"],"import React from \"react\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport createHistory from \"history/createBrowserHistory\";\r\nimport Dashboard from \"../Components/pages/dashboard/dashboard\";\r\nimport Login from \"../Components/pages/login/login\";\r\n// import Header from \"../header/header\"\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport ViewActivity from \"../Components/pages/view_activity/view_activity\";\r\nimport Profile from \"../Components/pages/profile/profile\";\r\n\r\nexport const history = createHistory();\r\n\r\nexport const AppRouter = () => (\r\n  <Router history={history}>\r\n    <div>         \r\n      <Switch>\r\n        <PublicRoute path=\"/\" component={Login} exact={true} />\r\n        <PrivateRoute path=\"/dashboard\" component={Dashboard} />\r\n        <PrivateRoute path=\"/view_activity\" component={ViewActivity} />\r\n        <PrivateRoute path=\"/profile\" component={Profile} />\r\n      </Switch>\r\n    </div>\r\n  </Router>\r\n);\r\n","D:\\repository\\TO_DO\\client-side\\src\\Redux\\Reducers.js",[],"D:\\repository\\TO_DO\\client-side\\src\\router\\PublicRoute.js",[],"D:\\repository\\TO_DO\\client-side\\src\\router\\PrivateRoute.js",[],"D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\profile\\profile.js",[],"D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\login\\login.js",["75","76","77","78","79"],"import React,{useState,useEffect} from \"react\"\r\nimport \"./login.css\"\r\nimport axios from \"axios\" \r\nimport login_image from \"../../../Assets/images/login-image.jpg\"\r\nimport {connect} from \"react-redux\"\r\nimport {AuthChange} from \"../../../Redux/actions\"\r\n\r\nconst Login=(props)=>{\r\n    const [signup, setSignup] = useState(true);\r\n    const [password,setPassord]=useState(false)\r\n    const [signupDetails,setSignupDetails]=useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        password:\"\"\r\n      })\r\n      const [loginDetails,setLoginDetails]=useState({\r\n        email:\"\",\r\n        password:\"\"\r\n      })\r\n      const LoginbuttonDisable=()=>{\r\n        if(loginDetails.email&&loginDetails.password){\r\n          var loginButton=document.querySelector(\"#loginButton\")\r\n          loginButton.disabled=false\r\n         }\r\n         else{\r\n           var loginButton=document.querySelector(\"#loginButton\")\r\n           loginButton.disabled=true\r\n         }\r\n      }\r\n      const SignupbuttonDisable=()=>{\r\n        console.log(\"running\")\r\n        if(signupDetails.name&&signupDetails.email&&signupDetails.password){\r\n         var submitButton=document.querySelector(\"#submitButton\")\r\n         submitButton.disabled=false\r\n        }\r\n        else{\r\n          var submitButton=document.querySelector(\"#submitButton\")\r\n          submitButton.disabled=true\r\n        }\r\n      }\r\n      \r\n  const newUser=(e)=>{\r\n    e.preventDefault();\r\n//     if(document.querySelector(\"#Sign_upMessage\").innerHTML=\"! Email already exists\"){\r\n//       document.querySelector(\"#Sign_upMessage\").innerHTML=\"\"\r\n//  }\r\n//     document.querySelector(\"#Sign_upMessage\").innerHTML=\"\"\r\n//     e.preventDefault();\r\naxios.post(\"http://localhost:3000/signup\",signupDetails) \r\n.then((res)=>{\r\n  console.log(res.data)\r\n})\r\n  }\r\n  const logging=(e)=>{\r\n    e.preventDefault()\r\n    axios.post(\"http://localhost:3000/login\",loginDetails)\r\n    .then((res)=>{\r\n      console.log(res.data);\r\n      localStorage.setItem(\"tok\",res.data.token);\r\n      props.dispatch(AuthChange(localStorage.getItem(\"tok\")))\r\n\r\n    })   \r\n    .catch((error)=>{\r\n      console.log(error)\r\n    })\r\n  }\r\n  useEffect(()=>{\r\n    if(document.getElementById(\"password\")){\r\n      if(!password){\r\n        document.getElementById(\"password\").type=\"password\"\r\n      }\r\n      else{\r\n        document.getElementById(\"password\").type=\"text\"\r\n      }\r\n    }\r\n  },[password])\r\n    return(\r\n        <div>\r\n            <div className=\"login-image\"></div>\r\n            <div className=\"Login-Container\">\r\n                {signup?\r\n                <div>\r\n                 <div className=\"Login-text\">\r\n                 <h2>LOGIN</h2>\r\n                 </div>\r\n                <div className=\"Login\">\r\n                <div className=\"user-div\">\r\n                <i class=\"fas fa-user-circle\" style={{borderRadius:\"50%\"}}></i>\r\n                </div>\r\n                    <div>\r\n                    <form onSubmit={(e)=>{logging(e)}}  autoComplete=\"on\">\r\n            <div  className=\"division_1\">\r\n            <div>\r\n            <i class=\"fas fa-envelope\"></i>\r\n            </div>\r\n            <input name=\"email\" onChange={(e)=>{setLoginDetails({...loginDetails,email:e.target.value})}}   type=\"email\" className=\"input\" placeholder=\"Email-id\" />\r\n            </div>\r\n            <div className=\"division_2\" >\r\n            <div>\r\n            <i class=\"fas fa-lock\"></i>\r\n            </div>\r\n            <input id=\"password\" onChange={(e)=>{setLoginDetails({...loginDetails,password:e.target.value})}} type=\"password\" placeholder=\"Password\" className=\"input\" />\r\n            {password? <i onClick={()=>setPassord(false)} class=\"fas fa-eye\"></i>:<i onClick={()=>{setPassord(true)}} class=\"fas fa-eye-slash\"></i>}         \r\n            {/* <input onChange={(e)=>{setLoginDetails({...loginDetails,password:e.target.value})}} type=\"password\" placeholder=\"*Password\" className=\"input\" /> */}\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div style={{textAlign:\"center\"}}>\r\n            <button className=\"Submitbutton\" id=\"loginButton\" disabled={true} >\r\n            <h3>Log-in</h3>\r\n            </button>\r\n            {document.querySelector(\"#loginButton\")&&LoginbuttonDisable()}\r\n            </div>\r\n            </form>\r\n            <br/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"new-user\">\r\n                  <h4>\r\n              New user?\r\n              </h4>\r\n              <text\r\n                href=\"\"\r\n                className=\"Register\"\r\n                onClick={() => {\r\n                  setSignup(!signup);\r\n                }}\r\n              >\r\n                <h5>\r\n                Register\r\n                </h5>\r\n              </text>\r\n            </div>\r\n                </div>:\r\n                <div>\r\n                   <h2 className=\"Login-text\">SIGN UP</h2>\r\n                <div className=\"Login\">\r\n            <h4\r\n              className=\"ExitButton\"\r\n              onClick={() => {\r\n                setSignup(!signup);\r\n              }}\r\n            >\r\n              x\r\n            </h4>\r\n           \r\n            <div>\r\n             \r\n              <p id=\"Sign_upMessage\" style={{color:\"red\",textAlign:\"center\",fontWeight:\"bold\"}}></p>\r\n\r\n              <form onSubmit={(e)=>{\r\n                  newUser(e)\r\n                }}>\r\n                  <div className=\"s-user-div\">\r\n                  <i class=\"fas fa-user-plus\"></i>\r\n                  </div>\r\n                <div>\r\n              <div className=\"division_3\">\r\n                <div>\r\n              <i class=\"fas fa-user\"></i>\r\n              </div>\r\n              <input name=\"signup_name\" onChange={(e)=>{setSignupDetails({...signupDetails,name:e.target.value});}}  type=\"text\" name=\"User_name\" className=\"input\" placeholder=\"User-name\" />\r\n             </div>\r\n              <br />\r\n              <br />\r\n            \r\n              <div className=\"division_4\" >\r\n              <div>\r\n            <i class=\"fas fa-envelope\"></i>\r\n            </div>\r\n              <input name=\"signup_email\" onChange={(e)=>{setSignupDetails({...signupDetails,email:e.target.value});}}  type=\"email\" name=\"Email_id\" className=\"input\" placeholder=\"Email-id\" />\r\n              \r\n              </div>\r\n              <br />\r\n              <br />\r\n           \r\n              <div className=\"division_5\" >\r\n              <div>\r\n            <i class=\"fas fa-lock\"></i>\r\n            </div>\r\n              <input\r\n              onChange={(e)=>{setSignupDetails({...signupDetails,password:e.target.value});\r\n              }}\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                className=\"input\"\r\n                id=\"password\"\r\n              />\r\n              {password? <i onClick={()=>setPassord(false)} class=\"fas fa-eye\"></i>:<i onClick={()=>{setPassord(true)}} class=\"fas fa-eye-slash\"></i>}         \r\n              </div>\r\n              <br />\r\n              <br />\r\n            {document.querySelector(\"#submitButton\")&&SignupbuttonDisable()}\r\n              <div style={{ textAlign: \"center\" }}>\r\n              <button\r\n                  className=\"Submitbutton\"\r\n                  id=\"submitButton\"\r\n                  disabled={true}\r\n                >\r\n                  <h3>Sign-up</h3>\r\n                </button>\r\n              </div>\r\n              </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          </div>\r\n}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default connect()(Login)","D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\dashboard\\dashboard.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport tick from \"../../../Assets/images/tick.png\";\r\nimport \"./dashboard.css\";\r\nimport axios from \"axios\"\r\nimport { UnderLine } from \"../../utility/underline\";\r\nimport { connect } from \"react-redux\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport { CircularProgressbarWithChildren } from \"react-circular-progressbar\";\r\n\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport moment from \"moment\";\r\nimport { da } from \"date-fns/locale\";\r\n\r\nconst Dashboard = (props) => {\r\n  const [personal, setPersonal] = useState(props.personal);\r\n  const [personalworklist, setPersonalworklist] = useState([\r\n    { content: \"eat\", completed: false },\r\n    { content: \"sleep\", completed: false },\r\n    { content: \"rule\", completed: true },\r\n    { content: \"conquer\", completed: true },\r\n  ]);\r\n  const [Professionalworklist, setProfessionalworklist] = useState([\r\n    // { content: \"do my application\", completed: false },\r\n    // { content: \"test my application\", completed: false },\r\n    // { content: \"finish my application\", completed: true },\r\n  ]);\r\n  const [randomcolor, setRandomcolor] = useState([\r\n    \"red\",\r\n    \"skyblue\",\r\n    \"blue\",\r\n    \"pink\",\r\n    \"green\",\r\n    \"yellow\",\r\n    \"orange\",\r\n    \"violet\",\r\n    \"lightgreen\",\r\n  ]);\r\n  const [psnlpercentage, setPsnlPercentage] = useState(0);\r\n  const [prfsnpercentage, setPrfsnPercentage] = useState(0);\r\n  const [psnlsts, setPsnlsts] = useState(0);\r\n  const [prfsnsts, setPrfsnsts] = useState(0);\r\n\r\n  let pests = 0;\r\n  let prsts = 0;\r\n  useEffect(() => {\r\n    console.log(\"runningd\");\r\n    console.log(moment().format('DD/MM/YYYY'))\r\n    axios\r\n      .post(\"http://localhost:3000/activity\", {\r\n        token: localStorage.getItem(\"tok\"),\r\n        type: props.personal?\"personal\":\"professional\",\r\n        date:moment().format('DD/MM/YYYY')\r\n      })\r\n      .then((res)=>{\r\n        if(res.data.type===\"personal\"){\r\n          setPersonalworklist(res.data.dailyactivity)\r\n        }\r\n        else{\r\n          setProfessionalworklist(res.data.dailyactivity)\r\n        }\r\n      }\r\n       \r\n      )\r\n  }, []);\r\n  useEffect(() => {\r\n    {\r\n      personalworklist.map((work) => {\r\n        work.completed === true && pests++;\r\n      });\r\n    }\r\n    {\r\n      Professionalworklist.map((work) => {\r\n        work.completed === true && prsts++;\r\n      });\r\n    }\r\n    setPsnlsts(pests);\r\n    setPrfsnsts(prsts);\r\n    setPsnlPercentage(Math.round((pests / personalworklist.length) * 100));\r\n    console.log(\"run run pests\");\r\n    console.log(pests);\r\n    setPrfsnPercentage(Math.round((prsts / Professionalworklist.length) * 100));\r\n    console.log(\"run run prsts\");\r\n    console.log(prsts);\r\n  }, []);\r\n\r\n  let i = 0;\r\n  const randomclrfun = (index) => {\r\n    if (i > randomcolor.length - 1) {\r\n      i = 0;\r\n    }\r\n    var ret = randomcolor[i];\r\n    i++;\r\n    return ret;\r\n  };\r\n  const submitting = (e) => {\r\n    e.preventDefault();\r\n    // console.log(e.target.test.value);\r\n    // const value = e.target.test.value;\r\n    // let update=null;\r\n    // if(props.personal===true){\r\n    // update=[{content:e.target.test.value,completed:false},...personalworklist]\r\n    // }\r\n    // else{\r\n    //    update=[{content:e.target.test.value,completed:false},...Professionalworklist]\r\n    // }\r\n    // console.log(update)\r\n    axios\r\n      .post(\"http://localhost:3000/update_todo\", {\r\n        token: localStorage.getItem(\"tok\"),\r\n        dailyactivity:e.target.test.value,\r\n        type: props.personal?\"personal\":\"professional\",\r\n        date:moment().format('DD/MM/YYYY')\r\n      })\r\n      .then((res) => {\r\n        console.log(\"response:\", res.data);\r\n        if(res.data.type===\"personal\"){\r\n          setPersonalworklist(res.data.activities)\r\n        }\r\n        else{\r\n          setProfessionalworklist(res.data.activities)\r\n        }\r\n        // setWorklist([{content:e.target.test.value,completed:false},...worklist])\r\n        e.target.test.value = \"\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const personalcomplete = (index, e) => {\r\n      if(e.target.innerHTML===\"Mark as done\"){\r\n      //  const update=[...personalworklist]\r\n      //  update[index].completed=true;\r\n      //  update.splice(personal.length,0,personal[index])\r\n      //  update.splice(index,1)\r\n      \r\n      const update = [...personalworklist];\r\n      update[index].completed = true;\r\n      update.splice(personalworklist.length, 0, personalworklist[index]);\r\n      update.splice(index, 1);\r\n      axios\r\n      .post(\"http://localhost:3000/mark\", {\r\n        token: localStorage.getItem(\"tok\"),\r\n        dailyactivity:update,\r\n        type:props.personal?\"personal\":\"professional\",\r\n        date:moment().format('DD/MM/YYYY')\r\n      }).then((res)=>{\r\n        console.log(res.data)\r\n        res.data.type===\"personal\"?\r\n        setPersonalworklist(res.data.activities):\r\n        setProfessionalworklist(res.data.activities)\r\n        pests = 0;\r\n        {\r\n          update.map((work) => {\r\n            work.completed === true && pests++;\r\n          });\r\n        }\r\n        setPsnlsts(pests);\r\n        setPsnlPercentage(Math.round((pests / update.length) * 100));\r\n        })\r\n      }\r\n  };\r\n  const completeprofessional = (index, e) => {\r\n    const update = [...Professionalworklist];\r\n    update[index].completed = true;\r\n    update.splice(Professionalworklist.length, 0, Professionalworklist[index]);\r\n    update.splice(index, 1);\r\n    setProfessionalworklist(update);\r\n    prsts = 0;\r\n    {\r\n      update.map((work) => {\r\n        work.completed === true && prsts++;\r\n      });\r\n    }\r\n    setPrfsnsts(prsts);\r\n    setPrfsnPercentage(Math.round((prsts / update.length) * 100));\r\n  };\r\n\r\n  const prfsdelete = (index) => {\r\n    console.log(index);\r\n    const copy = [...Professionalworklist];\r\n    copy.splice(index, 1);\r\n    setProfessionalworklist(copy);\r\n    prsts = 0;\r\n    {\r\n      copy.map((work) => {\r\n        work.completed === true && prsts++;\r\n      });\r\n    }\r\n    setPrfsnsts(prsts);\r\n    setPrfsnPercentage(Math.round((prsts / copy.length) * 100));\r\n  };\r\n\r\n  const personaldelete = (index) => {\r\n    console.log(index);\r\n    const copy = [...personalworklist];\r\n    copy.splice(index, 1);\r\n    setPersonalworklist(copy);\r\n    pests = 0;\r\n    {\r\n      copy.map((work) => {\r\n        work.completed === true && pests++;\r\n      });\r\n    }\r\n    setPsnlsts(pests);\r\n    setPsnlPercentage(Math.round((pests / copy.length) * 100));\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboardContainer\">\r\n      <div className=\"flexBox\">\r\n        <div className=\"dashTitle\">\r\n          <div>\r\n            <h5>\r\n            Your Works\r\n            </h5>\r\n            <UnderLine backgroundColor=\"red\" />\r\n          </div>\r\n        </div>\r\n        {props.personal ? (\r\n          <Fragment>\r\n            <div className=\"dashSubtitle\">\r\n              <div className=\"subText\">Personal</div>\r\n              <div className=\"line\"></div>\r\n            </div>\r\n            {/* {personalworklist.map((work) => {     \r\n                    work.completed === true && \r\n                    pests++;\r\n                })} */}\r\n            <div className=\"statusDiv\">\r\n              <div className=\"completed\">\r\n                <CircularProgressbar\r\n                  styles={{\r\n                    root: { width: \"45px\", height: \"45px\", fontSize: \"100px\" },\r\n                    text: {\r\n                      fontSize: \"28px\",\r\n                      fill: \"green\",\r\n                    },\r\n                  }}\r\n                  strokeWidth=\"15\"\r\n                  value={psnlpercentage}\r\n                  text={`${psnlpercentage}%`}\r\n                  className=\"progress\"\r\n                />\r\n\r\n                <text>\r\n                  completed:\r\n                  <text style={{ color: \"red\", fontFamily: \"poppins\" }}>\r\n                    {\" \"}\r\n                    {psnlsts}\r\n                  </text>{\" \"}\r\n                  /{\" \"}\r\n                  <text\r\n                    style={{\r\n                      color: \"rgb(9, 207, 9)\",\r\n                      fontFamily: \"poppins\",\r\n                    }}\r\n                  >\r\n                    {personalworklist.length}\r\n                  </text>\r\n                </text>\r\n              </div>\r\n              <button className=\"AddWrksBtn\"  onClick={() => {\r\n              var container = document.querySelector(\".inputContainer\");\r\n              container.style.top = \"0px\";\r\n            }}>Add Works +</button>\r\n            </div>\r\n            <div className=\"todoList\">\r\n            <form\r\n          onSubmit={(e) => {\r\n            submitting(e);\r\n          }}\r\n        >\r\n          <div className=\"inputContainer\">\r\n            <div className=\"exitDiv\">\r\n              <div\r\n                className=\"exit\"\r\n                onClick={() => {\r\n                  var container = document.querySelector(\".inputContainer\");\r\n                  container.style.top = \"-200px\";\r\n                }}\r\n              >\r\n                <div className=\"ediv_1\"></div>\r\n                <div className=\"ediv_2\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"input-wrapper\">\r\n            <label>Enter your work</label>\r\n              <div>\r\n              <div\r\n                className=\"inputDiv\"\r\n                onFocus={() => {\r\n                  var inputDiv = document.querySelector(\".inputDiv\");\r\n                  // inputDiv.style.boxShadow=\"0 0 8px rgb(200, 200, 200)\"\r\n                  inputDiv.style.border=\"1px solid rgb(108, 108, 255)\"\r\n                }}\r\n                onBlur={() => {\r\n                  var inputDiv = document.querySelector(\".inputDiv\");\r\n                  inputDiv.style.boxShadow = \"none\";\r\n                  inputDiv.style.border=\"1px solid white\"\r\n                }}\r\n              >\r\n                <i class=\"fa fa-tasks fa-lg\"></i>\r\n               \r\n                <input\r\n                  name=\"test\"\r\n                  className=\"d-input\"\r\n                  type=\"text\"\r\n                />\r\n                \r\n              </div>\r\n              <button className=\"Add-Button\"><h3>Add +</h3></button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n              {personalworklist.map((work) => (\r\n                <div\r\n                  className=\"eachWork\"\r\n                  style={{ borderLeft: `5px solid ${randomclrfun()}` }}\r\n                >\r\n                  <div className=\"content\">\r\n                    {!work.completed ? (\r\n                      <h4>{`${work.content[0].toUpperCase()}${work.content.slice(\r\n                        1,\r\n                        work.content.length\r\n                      )}`}</h4>\r\n                    ) : (\r\n                      <h4>\r\n                        <del>{`${work.content[0].toUpperCase()}${work.content.slice(\r\n                          1,\r\n                          work.content.length\r\n                        )}`}</del>\r\n                      </h4>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"accDec\">\r\n                    {work.completed ? null : (\r\n                      <button\r\n                        className=\"Mark-button\"\r\n                        onClick={(e) => {\r\n                          personalcomplete(personalworklist.indexOf(work), e);\r\n                        }}\r\n                      >\r\n                        <Fragment>Mark as done</Fragment>\r\n                      </button>\r\n                    )}\r\n                    <i\r\n                      class=\"fas fa-trash-alt\"\r\n                      onClick={() => {\r\n                        personaldelete(personalworklist.indexOf(work));\r\n                      }}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <div className=\"dashSubtitle\">\r\n              <div className=\"subText\">Professional</div>\r\n              <div className=\"line\"></div>\r\n            </div>\r\n            <div className=\"statusDiv\">\r\n              <div className=\"completed\">\r\n                <CircularProgressbar\r\n                  styles={{\r\n                    root: { width: \"45px\", height: \"45px\", fontSize: \"100px\" },\r\n                    text: {\r\n                      fontSize: \"28px\",\r\n                      fill: \"green\",\r\n                    },\r\n                  }}\r\n                  strokeWidth=\"15\"\r\n                  value={prfsnpercentage}\r\n                  text={`${prfsnpercentage}%`}\r\n                  className=\"progress\"\r\n                />\r\n                {/* {Professionalworklist.map((work) => {\r\n                  {\r\n                    work.completed === true && prsts++\r\n                    {console.log(\"prsts\")}\r\n                    {console.log(psnlpercentage,prfsnpercentage)}\r\n                  }\r\n                })} */}\r\n                <text>\r\n                  completed:\r\n                  <text style={{ color: \"red\", fontFamily: \"sans seif\" }}>\r\n                    {\" \"}\r\n                    {prfsnsts}\r\n                  </text>{\" \"}\r\n                  /{\" \"}\r\n                  <text\r\n                    style={{\r\n                      color: \"rgb(9, 207, 9)\",\r\n                      fontFamily: \"sans serif\",\r\n                    }}\r\n                  >\r\n                    {Professionalworklist.length}\r\n                  </text>\r\n                </text>\r\n              </div>\r\n              <button className=\"AddWrksBtn\">Add Works +</button>\r\n            </div>\r\n            <div className=\"todoList\">\r\n              {Professionalworklist.map((work) => (\r\n                <div\r\n                  className=\"eachWork\"\r\n                  style={{ borderLeft: `10px solid ${randomclrfun()}` }}\r\n                >\r\n                  <div className=\"content\">\r\n                    {!work.completed ? (\r\n                      <Fragment>{`${work.content[0].toUpperCase()}${work.content.slice(\r\n                        1,\r\n                        work.content.length\r\n                      )}`}</Fragment>\r\n                    ) : (\r\n                      <Fragment>\r\n                        <del>{`${work.content[0].toUpperCase()}${work.content.slice(\r\n                          1,\r\n                          work.content.length\r\n                        )}`}</del>\r\n                      </Fragment>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"accDec\">\r\n                    {work.completed ? null : (\r\n                      <button\r\n                        className=\"Mark-button\"\r\n                        onClick={(e) => {\r\n                          completeprofessional(\r\n                            Professionalworklist.indexOf(work),\r\n                            e\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Fragment>Mark as done</Fragment>\r\n                      </button>\r\n                    )}\r\n                    <i\r\n                      class=\"fas fa-trash-alt\"\r\n                      onClick={() => {\r\n                        prfsdelete(Professionalworklist.indexOf(work));\r\n                      }}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.Auth,\r\n  personal: state.Dasbd,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\view_activity\\view_activity.js",["101","102","103","104","105","106","107","108","109","110","111"],"D:\\repository\\TO_DO\\client-side\\src\\Components\\Header\\Header.js",["112","113"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Header.css\";\r\nimport pencil from \"../../Assets/images/pencil.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\"\r\nimport { AuthChange,Authfalse,changePersonal,changehistryPersonal } from \"../../Redux/actions\"\r\nimport {history} from \"../../router/Router\"\r\n\r\nconst Header = (props) => {\r\n  const [dashboardCnt, setDashboardCnt] = useState(false);\r\n  const [ActivityCnt, setActivityCnt] = useState(false);\r\n  const [i, setI] = useState(0);\r\n  useEffect(() => {\r\n    console.log(\"running\");\r\n    var active = document.getElementsByClassName(\"navActive\")[0].parentElement.parentElement;\r\n    // active.style.background = \"linear-gradient(90deg,rgba(4, 216, 253, 0.466),rgb(68, 68, 248))\";\r\n    active.style.backgroundColor=\"rgb(100, 128, 255)\"\r\n  }, []);\r\n  const personal = () => {\r\n    if(!props.personal){\r\n      props.changePersonal()\r\n    }\r\n  };\r\n  const profession=()=>{\r\n    if(props.personal){\r\n      props.changePersonal()\r\n    }\r\n  }\r\n\r\n  const personalhistory=()=>{\r\n    props.changehisPersonal()\r\n  }\r\n  const professionhistory=()=>{\r\n    props.changehisPersonal()\r\n  }\r\n  return (\r\n    <div className=\"Sidebar\">\r\n      {console.log(\"act\",ActivityCnt)}\r\n      <div className=\"Title\">\r\n        <h2>Todo</h2>\r\n        {/* <img src={pencil} className=\"pencil\" /> */}\r\n      </div>\r\n      <div className=\"NavContainer\">\r\n        <div className=\"eachNav\">\r\n          <div className=\"iconDiv\">\r\n            <div className=\"sideIcon\">\r\n              <i class=\"fas fa-tasks\"></i>\r\n            </div>\r\n            <text id=\"Dashboard\" className=\"sidebarText\">\r\n              <NavLink\r\n                to=\"dashboard\"\r\n                className=\"navClass\"\r\n                activeClassName=\"navActive\"\r\n              >\r\n                <h5>\r\n                Dashboard\r\n                </h5>\r\n                {dashboardCnt && (\r\n            <div className=\"dropDown\">\r\n              {props.personal? <text onClick={()=>{\r\n              personal()\r\n              }} className=\"highlight\">Personal</text>:\r\n               <text onClick={()=>{\r\n                personal()\r\n                }} >Personal</text>}\r\n              {!props.personal?\r\n              <text onClick={()=>{\r\n                profession()\r\n              }} className=\"highlight\">Profession</text>:<text onClick={()=>{\r\n                profession()\r\n              }}>Profession</text>}\r\n            </div>\r\n          )}\r\n              </NavLink>\r\n              <i\r\n                class=\"fas fa-caret-down\"\r\n                onClick={(e) => {\r\n                  if(history.location.pathname===\"/dashboard\"){\r\n                    if (dashboardCnt) {\r\n                      console.log(\"entering\")\r\n                      setDashboardCnt(false);\r\n                      e.target.style.transform = \"rotate(0deg)\";\r\n                    } else {\r\n                      console.log(\"entering\")\r\n                      setDashboardCnt(true);\r\n                      e.target.style.transform = \"rotate(180deg)\";\r\n                    }\r\n                  }\r\n                  else{\r\n                    history.push(\"/dashboard\")\r\n                  }\r\n                }}\r\n              ></i>\r\n            </text>\r\n          </div>\r\n        </div>\r\n       {console.log(dashboardCnt)}\r\n        <div className=\"eachNav\">\r\n          <div className=\"iconDiv\">\r\n            <div className=\"sideIcon\">\r\n              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            <text id=\"View_Activity\" className=\"sidebarText\">\r\n              <NavLink\r\n                to=\"/view_activity\"\r\n                className=\"navClass\"\r\n                activeClassName=\"navActive\"\r\n              >\r\n                <h5>\r\n                View Activity\r\n                </h5>\r\n                {ActivityCnt && (\r\n             <div className=\"dropDown\">\r\n             {props.hispersonal? <text onClick={()=>{\r\n             personalhistory()\r\n             }} className=\"highlight\">Personal</text>:\r\n              <text onClick={()=>{\r\n               personalhistory()\r\n               }} >Personal</text>}\r\n             {!props.hispersonal?\r\n             <text onClick={()=>{\r\n               professionhistory()\r\n             }} className=\"highlight\">Profession</text>:<text onClick={()=>{\r\n               professionhistory()\r\n             }}>Profession</text>}\r\n           </div>\r\n          )}\r\n              </NavLink>\r\n              <i\r\n                class=\"fas fa-caret-down\"\r\n                onClick={(e) => {\r\n                  if(history.location.pathname===\"/view_activity\"){\r\n                    if (ActivityCnt) {\r\n                      setActivityCnt(false);\r\n                      e.target.style.transform = \"rotate(0deg)\";\r\n                    } else {\r\n                      setActivityCnt(true);\r\n                      e.target.style.transform = \"rotate(180deg)\";\r\n                    }\r\n                  }\r\n                  else{\r\n                    history.push(\"/view_activity\")\r\n                  }\r\n                 \r\n                }}\r\n              ></i>\r\n            </text>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"eachNav\">\r\n          <div className=\"iconDiv\">\r\n            <div className=\"sideIcon\">\r\n              <i class=\"fa fa-user-circle\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            <text className=\"sidebarText\"> <NavLink\r\n                to=\"Profile\"\r\n                className=\"navClass\"\r\n                activeClassName=\"navActive\"\r\n              >\r\n                <h5>Profile</h5>\r\n                </NavLink></text>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"eachNav\">\r\n          <div className=\"iconDiv\">\r\n            <div className=\"sideIcon\">\r\n              <i class=\"fa fa-power-off\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            <text className=\"sidebarText\"><h5>Logout</h5></text>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n const mapStateToProps = (state) => ({\r\n  isAuthenticated: state.Auth,\r\n  personal: state.Dasbd,\r\n  hispersonal:state.History\r\n});\r\n\r\n const mapDispatchToProps=(dispatch)=>({\r\n  AuthChange:()=>dispatch(AuthChange()),\r\n  Authfalse:()=>dispatch(Authfalse()),\r\n  changePersonal:()=>dispatch(changePersonal()),\r\n  changehisPersonal:()=>dispatch(changehistryPersonal())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","D:\\repository\\TO_DO\\client-side\\src\\Redux\\actions.js",[],"D:\\repository\\TO_DO\\client-side\\src\\Components\\utility\\underline.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":13},{"ruleId":"118","severity":1,"message":"122","line":6,"column":9,"nodeType":"120","messageId":"121","endLine":6,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":7,"column":1,"nodeType":"125","endLine":17,"endColumn":2},{"ruleId":"118","severity":1,"message":"126","line":2,"column":18,"nodeType":"120","messageId":"121","endLine":2,"endColumn":23},{"ruleId":"118","severity":1,"message":"127","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":26,"column":16,"nodeType":"120","messageId":"130","endLine":26,"endColumn":27},{"ruleId":"128","severity":1,"message":"131","line":37,"column":15,"nodeType":"120","messageId":"130","endLine":37,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":162,"column":130,"nodeType":"134","endLine":162,"endColumn":146},{"ruleId":"132","severity":1,"message":"133","line":171,"column":133,"nodeType":"134","endLine":171,"endColumn":148},{"ruleId":"118","severity":1,"message":"135","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":12},{"ruleId":"118","severity":1,"message":"136","line":7,"column":31,"nodeType":"120","messageId":"121","endLine":7,"endColumn":42},{"ruleId":"118","severity":1,"message":"137","line":8,"column":10,"nodeType":"120","messageId":"121","endLine":8,"endColumn":41},{"ruleId":"118","severity":1,"message":"138","line":12,"column":10,"nodeType":"120","messageId":"121","endLine":12,"endColumn":12},{"ruleId":"118","severity":1,"message":"139","line":15,"column":10,"nodeType":"120","messageId":"121","endLine":15,"endColumn":18},{"ruleId":"118","severity":1,"message":"140","line":15,"column":20,"nodeType":"120","messageId":"121","endLine":15,"endColumn":31},{"ruleId":"118","severity":1,"message":"141","line":27,"column":23,"nodeType":"120","messageId":"121","endLine":27,"endColumn":37},{"ruleId":"142","severity":1,"message":"143","line":64,"column":6,"nodeType":"144","endLine":64,"endColumn":8,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":66,"column":5,"nodeType":"148","messageId":"149","endLine":70,"endColumn":6},{"ruleId":"150","severity":1,"message":"151","line":67,"column":35,"nodeType":"152","messageId":"153","endLine":67,"endColumn":37},{"ruleId":"146","severity":1,"message":"147","line":71,"column":5,"nodeType":"148","messageId":"149","endLine":75,"endColumn":6},{"ruleId":"150","severity":1,"message":"151","line":72,"column":39,"nodeType":"152","messageId":"153","endLine":72,"endColumn":41},{"ruleId":"142","severity":1,"message":"154","line":84,"column":6,"nodeType":"144","endLine":84,"endColumn":8,"suggestions":"155"},{"ruleId":"146","severity":1,"message":"147","line":152,"column":9,"nodeType":"148","messageId":"149","endLine":156,"endColumn":10},{"ruleId":"150","severity":1,"message":"151","line":153,"column":29,"nodeType":"152","messageId":"153","endLine":153,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":169,"column":5,"nodeType":"148","messageId":"149","endLine":173,"endColumn":6},{"ruleId":"150","severity":1,"message":"151","line":170,"column":25,"nodeType":"152","messageId":"153","endLine":170,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":184,"column":5,"nodeType":"148","messageId":"149","endLine":188,"endColumn":6},{"ruleId":"150","severity":1,"message":"151","line":185,"column":23,"nodeType":"152","messageId":"153","endLine":185,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":199,"column":5,"nodeType":"148","messageId":"149","endLine":203,"endColumn":6},{"ruleId":"150","severity":1,"message":"151","line":200,"column":23,"nodeType":"152","messageId":"153","endLine":200,"endColumn":25},{"ruleId":"118","severity":1,"message":"156","line":1,"column":34,"nodeType":"120","messageId":"121","endLine":1,"endColumn":44},{"ruleId":"118","severity":1,"message":"157","line":2,"column":9,"nodeType":"120","messageId":"121","endLine":2,"endColumn":23},{"ruleId":"118","severity":1,"message":"158","line":3,"column":9,"nodeType":"120","messageId":"121","endLine":3,"endColumn":30},{"ruleId":"118","severity":1,"message":"159","line":6,"column":9,"nodeType":"120","messageId":"121","endLine":6,"endColumn":14},{"ruleId":"118","severity":1,"message":"160","line":11,"column":10,"nodeType":"120","messageId":"121","endLine":11,"endColumn":25},{"ruleId":"118","severity":1,"message":"161","line":11,"column":45,"nodeType":"120","messageId":"121","endLine":11,"endColumn":69},{"ruleId":"118","severity":1,"message":"162","line":15,"column":12,"nodeType":"120","messageId":"121","endLine":15,"endColumn":17},{"ruleId":"118","severity":1,"message":"163","line":15,"column":18,"nodeType":"120","messageId":"121","endLine":15,"endColumn":26},{"ruleId":"118","severity":1,"message":"164","line":18,"column":20,"nodeType":"120","messageId":"121","endLine":18,"endColumn":30},{"ruleId":"118","severity":1,"message":"165","line":23,"column":11,"nodeType":"120","messageId":"121","endLine":23,"endColumn":23},{"ruleId":"118","severity":1,"message":"166","line":32,"column":13,"nodeType":"120","messageId":"121","endLine":32,"endColumn":27},{"ruleId":"118","severity":1,"message":"167","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"168","line":12,"column":13,"nodeType":"120","messageId":"121","endLine":12,"endColumn":17},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Route' is defined but never used.","'login_image' is defined but never used.","no-redeclare","'loginButton' is already defined.","redeclared","'submitButton' is already defined.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'tick' is defined but never used.","'buildStyles' is defined but never used.","'CircularProgressbarWithChildren' is defined but never used.","'da' is defined but never used.","'personal' is assigned a value but never used.","'setPersonal' is assigned a value but never used.","'setRandomcolor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.personal'. Either include it or remove the dependency array.","ArrayExpression",["171"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'Professionalworklist', 'personalworklist', 'pests', and 'prsts'. Either include them or remove the dependency array.",["172"],"'useReducer' is defined but never used.","'changePersonal' is defined but never used.","'DashbdPersonalReducer' is defined but never used.","'store' is defined but never used.","'DateRangePicker' is defined but never used.","'DayPickerRangeController' is defined but never used.","'check' is assigned a value but never used.","'setCheck' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'handleSelect' is assigned a value but never used.","'selectionRange' is assigned a value but never used.","'pencil' is defined but never used.","'setI' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [props.personal]",{"range":"177","text":"178"},"Update the dependencies array to be: [Professionalworklist, personalworklist, pests, prsts]",{"range":"179","text":"180"},[2157,2159],"[props.personal]",[2741,2743],"[Professionalworklist, personalworklist, pests, prsts]"]