[{"D:\\repository\\TO_DO\\client-side\\src\\index.js":"1","D:\\repository\\TO_DO\\client-side\\src\\reportWebVitals.js":"2","D:\\repository\\TO_DO\\client-side\\src\\App\\App.js":"3","D:\\repository\\TO_DO\\client-side\\src\\router\\Router.js":"4","D:\\repository\\TO_DO\\client-side\\src\\Redux\\store.js":"5","D:\\repository\\TO_DO\\client-side\\src\\Redux\\Reducers.js":"6","D:\\repository\\TO_DO\\client-side\\src\\router\\PrivateRoute.js":"7","D:\\repository\\TO_DO\\client-side\\src\\router\\PublicRoute.js":"8","D:\\repository\\TO_DO\\client-side\\src\\Redux\\actions.js":"9","D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\dashboard\\dashboard.js":"10","D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\login\\login.js":"11","D:\\repository\\TO_DO\\client-side\\src\\Components\\Header\\Header.js":"12","D:\\repository\\TO_DO\\client-side\\src\\Components\\utility\\underline.js":"13","D:\\repository\\TO_DO\\client-side\\src\\Components\\utility\\mapRedux.js":"14","D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\profile\\profile.js":"15","D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\view_activity\\view_activity.js":"16"},{"size":504,"mtime":1612183113512,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":565,"mtime":1613048584614,"results":"20","hashOfConfig":"18"},{"size":988,"mtime":1613049035221,"results":"21","hashOfConfig":"18"},{"size":495,"mtime":1612080852085,"results":"22","hashOfConfig":"18"},{"size":531,"mtime":1616642280487,"results":"23","hashOfConfig":"18"},{"size":788,"mtime":1612784256190,"results":"24","hashOfConfig":"18"},{"size":724,"mtime":1612784248970,"results":"25","hashOfConfig":"18"},{"size":196,"mtime":1612176216440,"results":"26","hashOfConfig":"18"},{"size":14145,"mtime":1612362104590,"results":"27","hashOfConfig":"18"},{"size":7531,"mtime":1617024408603,"results":"28","hashOfConfig":"18"},{"size":5263,"mtime":1612288345833,"results":"29","hashOfConfig":"18"},{"size":1066,"mtime":1612075229136,"results":"30","hashOfConfig":"18"},{"size":386,"mtime":1612176240461,"results":"31","hashOfConfig":"18"},{"size":129,"mtime":1612167158906,"results":"32","hashOfConfig":"18"},{"size":661,"mtime":1612183921822,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"49o916",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"D:\\repository\\TO_DO\\client-side\\src\\index.js",[],["74","75"],"D:\\repository\\TO_DO\\client-side\\src\\reportWebVitals.js",[],"D:\\repository\\TO_DO\\client-side\\src\\App\\App.js",["76","77"],"import './App.css';\r\nimport React from \"react\"\r\nimport axios from \"axios\"\r\n// import {Header} from \"../header/header\"\r\n// import {Dashboard} from \"../pages/dashboard/dashboard\"\r\nimport {useEffect} from \"react\"\r\nimport {AppRouter} from \"../router/Router\"\r\nimport configurestore from \"../Redux/store\"\r\nimport { Provider } from 'react-redux';\r\n\r\nexport const store=configurestore();\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App-container\">\r\n      <Provider store={store}>\r\n      <AppRouter/>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\repository\\TO_DO\\client-side\\src\\router\\Router.js",["78"],"import React from \"react\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport createHistory from \"history/createBrowserHistory\";\r\nimport Dashboard from \"../Components/pages/dashboard/dashboard\";\r\nimport Login from \"../Components/pages/login/login\";\r\n// import Header from \"../header/header\"\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport ViewActivity from \"../Components/pages/view_activity/view_activity\";\r\nimport Profile from \"../Components/pages/profile/profile\";\r\n\r\nexport const history = createHistory();\r\n\r\nexport const AppRouter = () => (\r\n  <Router history={history}>\r\n    <div>         \r\n      <Switch>\r\n        <PublicRoute path=\"/\" component={Login} exact={true} />\r\n        <PrivateRoute path=\"/Dashboard\" component={Dashboard} />\r\n        <PrivateRoute path=\"/View_Activity\" component={ViewActivity} />\r\n        <PrivateRoute path=\"/Profile\" component={Profile} />\r\n      </Switch>\r\n    </div>\r\n  </Router>\r\n);\r\n","D:\\repository\\TO_DO\\client-side\\src\\Redux\\store.js",["79"],"import {createStore,combineReducers,applyMiddleware,compose} from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport {AuthReducer,DashbdPersonalReducer} from \"./Reducers\"\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default()=>{\r\n    const store=createStore(\r\n        combineReducers({\r\n            Auth:AuthReducer,\r\n            Dasbd:DashbdPersonalReducer\r\n        }),\r\n        composeEnhancers(applyMiddleware(thunk))\r\n    );\r\n  return store \r\n}","D:\\repository\\TO_DO\\client-side\\src\\Redux\\Reducers.js",[],"D:\\repository\\TO_DO\\client-side\\src\\router\\PrivateRoute.js",[],"D:\\repository\\TO_DO\\client-side\\src\\router\\PublicRoute.js",[],"D:\\repository\\TO_DO\\client-side\\src\\Redux\\actions.js",[],"D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\dashboard\\dashboard.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport tick from \"../../../Assets/images/tick.png\";\r\nimport \"./dashboard.css\";\r\nimport { UnderLine } from \"../../utility/underline\";\r\nimport { connect } from \"react-redux\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport { CircularProgressbarWithChildren } from \"react-circular-progressbar\";\r\n\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nconst Dashboard = (props) => {\r\n  const [personal, setPersonal] = useState(props.personal);\r\n  const [personalworklist, setPersonalworklist] = useState([\r\n    { content: \"eat\", completed: false },\r\n    { content: \"sleep\", completed: false },\r\n    { content: \"rule\", completed: true },\r\n    { content: \"conquer\", completed: true },\r\n  ]);\r\n  const [Professionalworklist, setProfessionalworklist] = useState([\r\n    { content: \"do my application\", completed: false },\r\n    { content: \"test my application\", completed: false },\r\n    { content: \"finish my application\", completed: true },\r\n  ]);\r\n  const [randomcolor, setRandomcolor] = useState([\r\n    \"red\",\r\n    \"skyblue\",\r\n    \"blue\",\r\n    \"pink\",\r\n    \"green\",\r\n    \"yellow\",\r\n    \"orange\",\r\n    \"violet\",\r\n    \"lightgreen\",\r\n  ]);\r\n  const [psnlpercentage, setPsnlPercentage] = useState(0);\r\n  const [prfsnpercentage, setPrfsnPercentage] = useState(0);\r\n  const [psnlsts, setPsnlsts] = useState(0);\r\n  const [prfsnsts, setPrfsnsts] = useState(0);\r\n\r\n  let pests = 0;\r\n  let prsts = 0;\r\n  useEffect(() => {\r\n    console.log(\"runningd\");\r\n  }, []);\r\n  useEffect(() => {\r\n    {\r\n      personalworklist.map((work) => {\r\n        work.completed === true && pests++;\r\n      });\r\n    }\r\n    {\r\n      Professionalworklist.map((work) => {\r\n        work.completed === true && prsts++;\r\n      });\r\n    }\r\n    setPsnlsts(pests);\r\n    setPrfsnsts(prsts);\r\n    setPsnlPercentage(Math.round((pests / personalworklist.length) * 100));\r\n    console.log(\"run run pests\");\r\n    console.log(pests);\r\n    setPrfsnPercentage(Math.round((prsts / Professionalworklist.length) * 100));\r\n    console.log(\"run run prsts\");\r\n    console.log(prsts);\r\n  }, []);\r\n\r\n  let i = 0;\r\n  const randomclrfun = (index) => {\r\n    if (i > randomcolor.length - 1) {\r\n      i = 0;\r\n    }\r\n    var ret = randomcolor[i];\r\n    i++;\r\n    return ret;\r\n  };\r\n  const submitting = (e) => {\r\n    // e.preventDefault();\r\n    // console.log(e.target.test.value);\r\n    // const value = e.target.test.value;\r\n    // const update=[{content:e.target.test.value,completed:false},...worklist]\r\n    // console.log(update)\r\n    // axios\r\n    //   .post(\"http://localhost:3000/update_todo\", {\r\n    //     token: localStorage.getItem(\"tok\"),\r\n    //     todolist:update,\r\n    //   })\r\n    //   .then((res) => {\r\n    //     console.log(\"response:\", res.data);\r\n    //     setWorklist([{content:e.target.test.value,completed:false},...worklist])\r\n    //     e.target.test.value = \"\";\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(error);\r\n    //   });\r\n  };\r\n  const personalcomplete = (index, e) => {\r\n    //   if(e.target.innerHTML===\"Mark as done\"){\r\n    //    const update=[...worklist]\r\n    //    update[index].completed=true;\r\n    //    update.splice(personal.length,0,personal[index])\r\n    //    update.splice(index,1)\r\n    //    axios\r\n    //    .post(\"http://localhost:3000/update_todo\", {\r\n    //      token: localStorage.getItem(\"tok\"),\r\n    //      todolist:update,\r\n    //    }).then((res)=>{\r\n    //      console.log(res.data)\r\n    //      setWorklist(update)\r\n    //    })\r\n\r\n    //  console.log(update)\r\n    //   }\r\n    const update = [...personalworklist];\r\n    update[index].completed = true;\r\n    update.splice(personalworklist.length, 0, personalworklist[index]);\r\n    update.splice(index, 1);\r\n    setPersonalworklist(update);\r\n    pests = 0;\r\n    {\r\n      update.map((work) => {\r\n        work.completed === true && pests++;\r\n      });\r\n    }\r\n    setPsnlsts(pests);\r\n    setPsnlPercentage(Math.round((pests / update.length) * 100));\r\n  };\r\n  const completeprofessional = (index, e) => {\r\n    const update = [...Professionalworklist];\r\n    update[index].completed = true;\r\n    update.splice(Professionalworklist.length, 0, Professionalworklist[index]);\r\n    update.splice(index, 1);\r\n    setProfessionalworklist(update);\r\n    prsts = 0;\r\n    {\r\n      update.map((work) => {\r\n        work.completed === true && prsts++;\r\n      });\r\n    }\r\n    setPrfsnsts(prsts);\r\n    setPrfsnPercentage(Math.round((prsts / update.length) * 100));\r\n  };\r\n\r\n  const prfsdelete = (index) => {\r\n    console.log(index);\r\n    const copy = [...Professionalworklist];\r\n    copy.splice(index, 1);\r\n    setProfessionalworklist(copy);\r\n    prsts = 0;\r\n    {\r\n      copy.map((work) => {\r\n        work.completed === true && prsts++;\r\n      });\r\n    }\r\n    setPrfsnsts(prsts);\r\n    setPrfsnPercentage(Math.round((prsts / copy.length) * 100));\r\n  };\r\n\r\n  const personaldelete = (index) => {\r\n    console.log(index);\r\n    const copy = [...personalworklist];\r\n    copy.splice(index, 1);\r\n    setPersonalworklist(copy);\r\n    pests = 0;\r\n    {\r\n      copy.map((work) => {\r\n        work.completed === true && pests++;\r\n      });\r\n    }\r\n    setPsnlsts(pests);\r\n    setPsnlPercentage(Math.round((pests / copy.length) * 100));\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboardContainer\">\r\n      <div className=\"flexBox\">\r\n        <div className=\"dashTitle\">\r\n          <div>\r\n            Your Works\r\n            <UnderLine backgroundColor=\"red\" />\r\n          </div>\r\n        </div>\r\n        {props.personal ? (\r\n          <Fragment>\r\n            <div className=\"dashSubtitle\">\r\n              <div className=\"subText\">Personal</div>\r\n              <div className=\"line\"></div>\r\n            </div>\r\n            {/* {personalworklist.map((work) => {     \r\n                    work.completed === true && \r\n                    pests++;\r\n                })} */}\r\n            <div className=\"statusDiv\">\r\n              <div className=\"completed\">\r\n                <CircularProgressbar\r\n                  styles={{\r\n                    root: { width: \"45px\", height: \"45px\", fontSize: \"100px\" },\r\n                    text: {\r\n                      fontSize: \"28px\",\r\n                      fill: \"green\",\r\n                    },\r\n                  }}\r\n                  strokeWidth=\"15\"\r\n                  value={psnlpercentage}\r\n                  text={`${psnlpercentage}%`}\r\n                  className=\"progress\"\r\n                />\r\n\r\n                <text>\r\n                  completed:\r\n                  <text style={{ color: \"red\", fontFamily: \"sans seif\" }}>\r\n                    {\" \"}\r\n                    {psnlsts}\r\n                  </text>{\" \"}\r\n                  /{\" \"}\r\n                  <text\r\n                    style={{\r\n                      color: \"rgb(9, 207, 9)\",\r\n                      fontFamily: \"sans serif\",\r\n                    }}\r\n                  >\r\n                    {personalworklist.length}\r\n                  </text>\r\n                </text>\r\n              </div>\r\n              <button className=\"AddWrksBtn\"  onClick={() => {\r\n              var container = document.querySelector(\".inputContainer\");\r\n              container.style.top = \"0px\";\r\n            }}>Add Works +</button>\r\n            </div>\r\n            <div className=\"todoList\">\r\n            <form\r\n          onSubmit={(e) => {\r\n            submitting(e);\r\n          }}\r\n        >\r\n          <div className=\"inputContainer\">\r\n            <div className=\"exitDiv\">\r\n              <div\r\n                className=\"exit\"\r\n                onClick={() => {\r\n                  var container = document.querySelector(\".inputContainer\");\r\n                  container.style.top = \"-200px\";\r\n                }}\r\n              >\r\n                <div className=\"ediv_1\"></div>\r\n                <div className=\"ediv_2\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"input-wrapper\">\r\n              <div\r\n                className=\"inputDiv\"\r\n                onFocus={() => {\r\n                  var inputDiv = document.querySelector(\".inputDiv\");\r\n                  inputDiv.style.boxShadow = \"0 0 15px rgba(0, 0, 0, 0.513)\";\r\n                }}\r\n                onBlur={() => {\r\n                  var inputDiv = document.querySelector(\".inputDiv\");\r\n                  inputDiv.style.boxShadow = \"none\";\r\n                }}\r\n              >\r\n                <i class=\"fa fa-tasks fa-lg\"></i>\r\n                <input\r\n                  name=\"test\"\r\n                  className=\"d-input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter work\"\r\n                />\r\n              </div>\r\n              <button className=\"Add-Button\">Add +</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n              {personalworklist.map((work) => (\r\n                <div\r\n                  className=\"eachWork\"\r\n                  style={{ borderLeft: `10px solid ${randomclrfun()}` }}\r\n                >\r\n                  <div className=\"content\">\r\n                    {!work.completed ? (\r\n                      <Fragment>{`${work.content[0].toUpperCase()}${work.content.slice(\r\n                        1,\r\n                        work.content.length\r\n                      )}`}</Fragment>\r\n                    ) : (\r\n                      <Fragment>\r\n                        <del>{`${work.content[0].toUpperCase()}${work.content.slice(\r\n                          1,\r\n                          work.content.length\r\n                        )}`}</del>\r\n                      </Fragment>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"accDec\">\r\n                    {work.completed ? null : (\r\n                      <button\r\n                        className=\"Mark-button\"\r\n                        onClick={(e) => {\r\n                          personalcomplete(personalworklist.indexOf(work), e);\r\n                        }}\r\n                      >\r\n                        <Fragment>Mark as done</Fragment>\r\n                      </button>\r\n                    )}\r\n                    <i\r\n                      class=\"fas fa-trash-alt\"\r\n                      onClick={() => {\r\n                        personaldelete(personalworklist.indexOf(work));\r\n                      }}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <div className=\"dashSubtitle\">\r\n              <div className=\"subText\">Professional</div>\r\n              <div className=\"line\"></div>\r\n            </div>\r\n            <div className=\"statusDiv\">\r\n              <div className=\"completed\">\r\n                <CircularProgressbar\r\n                  styles={{\r\n                    root: { width: \"45px\", height: \"45px\", fontSize: \"100px\" },\r\n                    text: {\r\n                      fontSize: \"28px\",\r\n                      fill: \"green\",\r\n                    },\r\n                  }}\r\n                  strokeWidth=\"15\"\r\n                  value={prfsnpercentage}\r\n                  text={`${prfsnpercentage}%`}\r\n                  className=\"progress\"\r\n                />\r\n                {/* {Professionalworklist.map((work) => {\r\n                  {\r\n                    work.completed === true && prsts++\r\n                    {console.log(\"prsts\")}\r\n                    {console.log(psnlpercentage,prfsnpercentage)}\r\n                  }\r\n                })} */}\r\n                <text>\r\n                  completed:\r\n                  <text style={{ color: \"red\", fontFamily: \"sans seif\" }}>\r\n                    {\" \"}\r\n                    {prfsnsts}\r\n                  </text>{\" \"}\r\n                  /{\" \"}\r\n                  <text\r\n                    style={{\r\n                      color: \"rgb(9, 207, 9)\",\r\n                      fontFamily: \"sans serif\",\r\n                    }}\r\n                  >\r\n                    {Professionalworklist.length}\r\n                  </text>\r\n                </text>\r\n              </div>\r\n              <button className=\"AddWrksBtn\">Add Works +</button>\r\n            </div>\r\n            <div className=\"todoList\">\r\n              {Professionalworklist.map((work) => (\r\n                <div\r\n                  className=\"eachWork\"\r\n                  style={{ borderLeft: `10px solid ${randomclrfun()}` }}\r\n                >\r\n                  <div className=\"content\">\r\n                    {!work.completed ? (\r\n                      <Fragment>{`${work.content[0].toUpperCase()}${work.content.slice(\r\n                        1,\r\n                        work.content.length\r\n                      )}`}</Fragment>\r\n                    ) : (\r\n                      <Fragment>\r\n                        <del>{`${work.content[0].toUpperCase()}${work.content.slice(\r\n                          1,\r\n                          work.content.length\r\n                        )}`}</del>\r\n                      </Fragment>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"accDec\">\r\n                    {work.completed ? null : (\r\n                      <button\r\n                        className=\"Mark-button\"\r\n                        onClick={(e) => {\r\n                          completeprofessional(\r\n                            Professionalworklist.indexOf(work),\r\n                            e\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Fragment>Mark as done</Fragment>\r\n                      </button>\r\n                    )}\r\n                    <i\r\n                      class=\"fas fa-trash-alt\"\r\n                      onClick={() => {\r\n                        prfsdelete(Professionalworklist.indexOf(work));\r\n                      }}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.Auth,\r\n  personal: state.Dasbd,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\login\\login.js",["99","100","101","102","103"],"D:\\repository\\TO_DO\\client-side\\src\\Components\\Header\\Header.js",["104","105"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Header.css\";\r\nimport pencil from \"../../Assets/images/pencil.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\"\r\nimport { AuthChange,Authfalse,changePersonal } from \"../../Redux/actions\"\r\n\r\nconst Header = (props) => {\r\n  const [dashboardCnt, setDashboardCnt] = useState(false);\r\n  const [ActivityCnt, setActivityCnt] = useState(false);\r\n  const [i, setI] = useState(0);\r\n  useEffect(() => {\r\n    console.log(\"running\");\r\n    var active = document.getElementsByClassName(\"navActive\")[0].parentElement;\r\n    active.style.background = \"linear-gradient(90deg,rgba(4, 216, 253, 0.466),rgb(68, 68, 248))\";\r\n  }, []);\r\n  const personal = () => {\r\n    if(!props.personal){\r\n      props.changePersonal()\r\n    }\r\n  };\r\n  const profession=()=>{\r\n    if(props.personal){\r\n      props.changePersonal()\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"Sidebar\">\r\n      {console.log(\"act\",ActivityCnt)}\r\n      <div className=\"Title\">\r\n        <h1>Todo</h1>\r\n        <img src={pencil} className=\"pencil\" />\r\n      </div>\r\n      <div className=\"NavContainer\">\r\n        <div className=\"eachNav\">\r\n          <div className=\"iconDiv\">\r\n            <div className=\"sideIcon\">\r\n              <i class=\"fas fa-tasks\"></i>\r\n            </div>\r\n            <text id=\"Dashboard\" className=\"sidebarText\">\r\n              <NavLink\r\n                to=\"Dashboard\"\r\n                className=\"navClass\"\r\n                activeClassName=\"navActive\"\r\n              >\r\n                Dashboard\r\n              </NavLink>\r\n              <i\r\n                class=\"fas fa-caret-down\"\r\n                onClick={(e) => {\r\n                  if (dashboardCnt) {\r\n                    console.log(\"entering\")\r\n                    setDashboardCnt(false);\r\n                    e.target.style.transform = \"rotate(0deg)\";\r\n                  } else {\r\n                    console.log(\"entering\")\r\n                    setDashboardCnt(true);\r\n                    e.target.style.transform = \"rotate(180deg)\";\r\n                  }\r\n                }}\r\n              ></i>\r\n            </text>\r\n          </div>\r\n          {dashboardCnt && (\r\n            <div className=\"dropDown\">\r\n              {props.personal? <text onClick={()=>{\r\n              personal()\r\n              }} className=\"highlight\">Personal</text>:\r\n               <text onClick={()=>{\r\n                personal()\r\n                }} >Personal</text>}\r\n             \r\n              <br />\r\n              <br />\r\n              {!props.personal?\r\n              <text onClick={()=>{\r\n                profession()\r\n              }} className=\"highlight\">Profession</text>:<text onClick={()=>{\r\n                profession()\r\n              }}>Profession</text>}\r\n            </div>\r\n          )}\r\n        </div>\r\n       {console.log(dashboardCnt)}\r\n        <div className=\"eachNav\">\r\n          <div className=\"iconDiv\">\r\n            <div className=\"sideIcon\">\r\n              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            <text id=\"View_Activity\" className=\"sidebarText\">\r\n              <NavLink\r\n                to=\"/View_Activity\"\r\n                className=\"navClass\"\r\n                activeClassName=\"navActive\"\r\n              >\r\n                View Activity\r\n              </NavLink>\r\n              <i\r\n                class=\"fas fa-caret-down\"\r\n                onClick={(e) => {\r\n                  if (ActivityCnt) {\r\n                    setActivityCnt(false);\r\n                    e.target.style.transform = \"rotate(0deg)\";\r\n                  } else {\r\n                    setActivityCnt(true);\r\n                    e.target.style.transform = \"rotate(180deg)\";\r\n                  }\r\n                }}\r\n              ></i>\r\n            </text>\r\n            <div></div>\r\n          </div>\r\n          {ActivityCnt && (\r\n            <div className=\"dropDown\">\r\n              \r\n              <text>Personal</text>\r\n              <br />\r\n              <br />\r\n              <text>Profession</text>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"eachNav\">\r\n          <div className=\"iconDiv\">\r\n            <div className=\"sideIcon\">\r\n              <i class=\"fa fa-user-circle\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            <text className=\"sidebarText\"> <NavLink\r\n                to=\"Profile\"\r\n                className=\"navClass\"\r\n                activeClassName=\"navActive\"\r\n              >Profile</NavLink></text>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"eachNav\">\r\n          <div className=\"iconDiv\">\r\n            <div className=\"sideIcon\">\r\n              <i class=\"fa fa-power-off\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            <text className=\"sidebarText\">Logout</text>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n const mapStateToProps = (state) => ({\r\n  isAuthenticated: state.Auth,\r\n  personal: state.Dasbd,\r\n});\r\n\r\n const mapDispatchToProps=(dispatch)=>({\r\n  AuthChange:()=>dispatch(AuthChange()),\r\n  Authfalse:()=>dispatch(Authfalse()),\r\n  changePersonal:()=>dispatch(changePersonal())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","D:\\repository\\TO_DO\\client-side\\src\\Components\\utility\\underline.js",[],"D:\\repository\\TO_DO\\client-side\\src\\Components\\utility\\mapRedux.js",[],["106","107"],"D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\profile\\profile.js",[],"D:\\repository\\TO_DO\\client-side\\src\\Components\\pages\\view_activity\\view_activity.js",["108","109","110","111","112","113"],"import React,{useState,useEffect,useReducer} from \"react\"\r\nimport {changePersonal} from \"../../../Redux/actions\"\r\nimport {DashbdPersonalReducer} from \"../../../Redux/Reducers\"\r\n// import {mapStateToProps,mapDispatchToProps} from \"../../utility/mapRedux\"\r\nimport { connect } from \"react-redux\";\r\nimport {store} from \"../../../App/App\"\r\n\r\n\r\nconst ViewActivity=(props)=>{\r\n    // const [state,dispatch]= useReducer(DashbdPersonalReducer,false)\r\n    const [check,setCheck]=useState(false)\r\n    useEffect(()=>{\r\n        console.log(\"runningv\")\r\n    },[])\r\n\r\n    return(\r\n        \r\n        <div>ViewActivity</div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect()(ViewActivity)",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":13},{"ruleId":"118","severity":1,"message":"122","line":6,"column":9,"nodeType":"120","messageId":"121","endLine":6,"endColumn":18},{"ruleId":"118","severity":1,"message":"123","line":2,"column":18,"nodeType":"120","messageId":"121","endLine":2,"endColumn":23},{"ruleId":"124","severity":1,"message":"125","line":7,"column":1,"nodeType":"126","endLine":16,"endColumn":2},{"ruleId":"118","severity":1,"message":"127","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":12},{"ruleId":"118","severity":1,"message":"128","line":6,"column":31,"nodeType":"120","messageId":"121","endLine":6,"endColumn":42},{"ruleId":"118","severity":1,"message":"129","line":7,"column":10,"nodeType":"120","messageId":"121","endLine":7,"endColumn":41},{"ruleId":"118","severity":1,"message":"130","line":12,"column":10,"nodeType":"120","messageId":"121","endLine":12,"endColumn":18},{"ruleId":"118","severity":1,"message":"131","line":12,"column":20,"nodeType":"120","messageId":"121","endLine":12,"endColumn":31},{"ruleId":"118","severity":1,"message":"132","line":24,"column":23,"nodeType":"120","messageId":"121","endLine":24,"endColumn":37},{"ruleId":"133","severity":1,"message":"134","line":46,"column":5,"nodeType":"135","messageId":"136","endLine":50,"endColumn":6},{"ruleId":"137","severity":1,"message":"138","line":47,"column":35,"nodeType":"139","messageId":"140","endLine":47,"endColumn":37},{"ruleId":"133","severity":1,"message":"134","line":51,"column":5,"nodeType":"135","messageId":"136","endLine":55,"endColumn":6},{"ruleId":"137","severity":1,"message":"138","line":52,"column":39,"nodeType":"139","messageId":"140","endLine":52,"endColumn":41},{"ruleId":"141","severity":1,"message":"142","line":64,"column":6,"nodeType":"143","endLine":64,"endColumn":8,"suggestions":"144"},{"ruleId":"133","severity":1,"message":"134","line":118,"column":5,"nodeType":"135","messageId":"136","endLine":122,"endColumn":6},{"ruleId":"137","severity":1,"message":"138","line":119,"column":25,"nodeType":"139","messageId":"140","endLine":119,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":133,"column":5,"nodeType":"135","messageId":"136","endLine":137,"endColumn":6},{"ruleId":"137","severity":1,"message":"138","line":134,"column":25,"nodeType":"139","messageId":"140","endLine":134,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":148,"column":5,"nodeType":"135","messageId":"136","endLine":152,"endColumn":6},{"ruleId":"137","severity":1,"message":"138","line":149,"column":23,"nodeType":"139","messageId":"140","endLine":149,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":163,"column":5,"nodeType":"135","messageId":"136","endLine":167,"endColumn":6},{"ruleId":"137","severity":1,"message":"138","line":164,"column":23,"nodeType":"139","messageId":"140","endLine":164,"endColumn":25},{"ruleId":"118","severity":1,"message":"145","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":26,"column":16,"nodeType":"120","messageId":"148","endLine":26,"endColumn":27},{"ruleId":"146","severity":1,"message":"149","line":37,"column":15,"nodeType":"120","messageId":"148","endLine":37,"endColumn":27},{"ruleId":"150","severity":1,"message":"151","line":162,"column":130,"nodeType":"152","endLine":162,"endColumn":146},{"ruleId":"150","severity":1,"message":"151","line":171,"column":133,"nodeType":"152","endLine":171,"endColumn":148},{"ruleId":"118","severity":1,"message":"153","line":11,"column":13,"nodeType":"120","messageId":"121","endLine":11,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":32,"column":9,"nodeType":"156","endLine":32,"endColumn":48},{"ruleId":"114","replacedBy":"157"},{"ruleId":"116","replacedBy":"158"},{"ruleId":"118","severity":1,"message":"159","line":1,"column":34,"nodeType":"120","messageId":"121","endLine":1,"endColumn":44},{"ruleId":"118","severity":1,"message":"160","line":2,"column":9,"nodeType":"120","messageId":"121","endLine":2,"endColumn":23},{"ruleId":"118","severity":1,"message":"161","line":3,"column":9,"nodeType":"120","messageId":"121","endLine":3,"endColumn":30},{"ruleId":"118","severity":1,"message":"162","line":6,"column":9,"nodeType":"120","messageId":"121","endLine":6,"endColumn":14},{"ruleId":"118","severity":1,"message":"163","line":11,"column":12,"nodeType":"120","messageId":"121","endLine":11,"endColumn":17},{"ruleId":"118","severity":1,"message":"164","line":11,"column":18,"nodeType":"120","messageId":"121","endLine":11,"endColumn":26},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Route' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'tick' is defined but never used.","'buildStyles' is defined but never used.","'CircularProgressbarWithChildren' is defined but never used.","'personal' is assigned a value but never used.","'setPersonal' is assigned a value but never used.","'setRandomcolor' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Professionalworklist', 'personalworklist', 'pests', and 'prsts'. Either include them or remove the dependency array.","ArrayExpression",["167"],"'login_image' is defined but never used.","no-redeclare","'loginButton' is already defined.","redeclared","'submitButton' is already defined.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setI' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["165"],["166"],"'useReducer' is defined but never used.","'changePersonal' is defined but never used.","'DashbdPersonalReducer' is defined but never used.","'store' is defined but never used.","'check' is assigned a value but never used.","'setCheck' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},"Update the dependencies array to be: [Professionalworklist, personalworklist, pests, prsts]",{"range":"170","text":"171"},[2131,2133],"[Professionalworklist, personalworklist, pests, prsts]"]